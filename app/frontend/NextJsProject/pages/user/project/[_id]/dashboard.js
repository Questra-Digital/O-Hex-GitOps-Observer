import Head from "next/head";
import { useState, useEffect } from "react";
import { gql, useQuery } from "@apollo/client";
import client from "../../../../apollo-client";

import Header from "../../../../components/Dashboard/Header";
import TopCards from "../../../../components/Dashboard/TopCards";
import BarChart from "../../../../components/Dashboard/BarChart";
import RecentOrders from "../../../../components/Dashboard/RecentOrders";

// Enter the same query, you use to input the API gateway for data from pipeline
const GET_ARGOCD_DATA_QUERY = gql`
  query GetJob($id: ID!) {
    job(id: $id) {
      items {
        spec {
          source {
            targetRevision
          }
        }
      }
    }
  }
`;

export default function Home() {
 const { loading, error, data } = useQuery(GET_ARGOCD_DATA_QUERY, {
  client,
  variables: { "id": "6447cdc747ea2c74be345313" },
});

const [argoData, setArgoData] = useState(null);

useEffect(() => {
  if (data) {
    console.log(JSON.stringify(data))
    setArgoData(data);
  }
}, [data]);

// Now you can access `argoData` which will be null initially and will be updated with the actual `data` once it's available.

if (loading) {
  return <p>Loading...</p>;
}

if (error) {
  return <p>Error: {error.message}</p>;
}

if (!argoData) {
  return null;
}


  

  return (
    <>
    
    {/* <h1>Argo CD Data: {argoData.job.items[0].spec.source.targetRevision}</h1> */}
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-gray-100 min-h-screen">
  
        <Header />
        <TopCards />
        <div className="p-4 grid md:grid-cols-3 grid-cols-1 gap-4">
          <BarChart />
          <RecentOrders />
        </div>
      </main>
    </>
  );
}
