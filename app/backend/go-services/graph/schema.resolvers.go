package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"backend/services/graph/model"
	"backend/services/services"
	"context"
)

// CreateWorkspace is the resolver for the createWorkspace field.
func (r *mutationResolver) CreateWorkspace(ctx context.Context, input model.CreateWorkspaceInput) (*model.Workspace, error) {
	return db.CreateWorkspace(input), nil
}

// UpdateWorkspace is the resolver for the updateWorkspace field.
func (r *mutationResolver) UpdateWorkspace(ctx context.Context, id string, input model.UpdateWorkspaceInput) (*model.Workspace, error) {
	return db.UpdateWorkspace(id, input), nil
}

// DeleteWorkspace is the resolver for the deleteWorkspace field.
func (r *mutationResolver) DeleteWorkspace(ctx context.Context, id string) (*model.DeleteWorkspaceResponse, error) {
	return db.DeleteWorkspace(id), nil
}

// CreateProject is the resolver for the createProject field.
func (r *mutationResolver) CreateProject(ctx context.Context, input model.CreateProjectInput) (*model.Project, error) {
	return db.CreateProject(input), nil
}

// UpdateProject is the resolver for the updateProject field.
func (r *mutationResolver) UpdateProject(ctx context.Context, id string, input model.UpdateProjectInput) (*model.Project, error) {
	return db.UpdateProject(id, input), nil
}

// DeleteProject is the resolver for the deleteProject field.
func (r *mutationResolver) DeleteProject(ctx context.Context, id string) (*model.DeleteProjectResponse, error) {
	return db.DeleteProject(id), nil
}

// Getallworkspaces is the resolver for the getallworkspaces field.
func (r *queryResolver) Getallworkspaces(ctx context.Context) ([]*model.Workspace, error) {
	return db.GetAllWorkspaces(), nil
}

// Getworkspace is the resolver for the getworkspace field.
func (r *queryResolver) Getworkspace(ctx context.Context, id string) (*model.Workspace, error) {
	return db.GetWorkspace(id), nil
}

// Getworkspacesbyusername is the resolver for the getworkspacesbyusername field.
func (r *queryResolver) Getworkspacesbyusername(ctx context.Context, username string) ([]*model.Workspace, error) {
	return db.GetWorkspacesByUsername(username), nil
}

// Getallprojects is the resolver for the getallprojects field.
func (r *queryResolver) Getallprojects(ctx context.Context) ([]*model.Project, error) {
	return db.GetAllProjects(), nil
}

// Getproject is the resolver for the getproject field.
func (r *queryResolver) Getproject(ctx context.Context, id string) (*model.Project, error) {
	return db.GetProject(id), nil
}

// Getprojectsbyworkspace is the resolver for the getprojectsbyworkspace field.
func (r *queryResolver) Getprojectsbyworkspace(ctx context.Context, workspaceid string) ([]*model.Project, error) {
	return db.GetProjectsByWorkspace(workspaceid), nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

var db = services.Connect()
